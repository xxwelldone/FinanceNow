// <auto-generated />
using System;
using FinanceNow.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FinanceNow.Migrations
{
    [DbContext(typeof(FinanceNowContext))]
    partial class FinanceNowContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FinanceNow.Entities.CartoesDeCredito", b =>
                {
                    b.Property<int>("CartaoId")
                        .HasColumnType("integer")
                        .HasColumnName("cartao_id");

                    b.Property<string>("Bandeira")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("bandeira");

                    b.Property<int?>("ClienteId")
                        .HasColumnType("integer")
                        .HasColumnName("cliente_id");

                    b.Property<DateOnly?>("DataVencimentoFatura")
                        .HasColumnType("date")
                        .HasColumnName("data_vencimento_fatura");

                    b.Property<decimal?>("Limite")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("limite");

                    b.HasKey("CartaoId")
                        .HasName("cartoes_de_credito_pkey");

                    b.HasIndex("ClienteId");

                    b.ToTable("cartoes_de_credito", (string)null);
                });

            modelBuilder.Entity("FinanceNow.Entities.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .HasColumnType("integer")
                        .HasColumnName("cliente_id");

                    b.Property<string>("Cpf")
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)")
                        .HasColumnName("cpf");

                    b.Property<DateOnly?>("DataNascimento")
                        .HasColumnType("date")
                        .HasColumnName("data_nascimento");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("email");

                    b.Property<string>("Endereco")
                        .HasColumnType("text")
                        .HasColumnName("endereco");

                    b.Property<string>("Nome")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nome");

                    b.Property<string>("Profissao")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("profissao");

                    b.Property<decimal?>("Renda")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("renda");

                    b.Property<string>("Rg")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("rg");

                    b.Property<string>("Sobrenome")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("sobrenome");

                    b.Property<string>("Telefone")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("telefone");

                    b.HasKey("ClienteId")
                        .HasName("clientes_pkey");

                    b.ToTable("clientes", (string)null);
                });

            modelBuilder.Entity("FinanceNow.Entities.Conta", b =>
                {
                    b.Property<int>("ContaId")
                        .HasColumnType("integer")
                        .HasColumnName("conta_id");

                    b.Property<int?>("ClienteId")
                        .HasColumnType("integer")
                        .HasColumnName("cliente_id");

                    b.Property<DateOnly?>("DataAbertura")
                        .HasColumnType("date")
                        .HasColumnName("data_abertura");

                    b.Property<decimal?>("Saldo")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("saldo");

                    b.Property<string>("TipoConta")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("tipo_conta");

                    b.HasKey("ContaId")
                        .HasName("contas_pkey");

                    b.HasIndex("ClienteId");

                    b.ToTable("contas", (string)null);
                });

            modelBuilder.Entity("FinanceNow.Entities.Emprestimo", b =>
                {
                    b.Property<int>("EmprestimoId")
                        .HasColumnType("integer")
                        .HasColumnName("emprestimo_id");

                    b.Property<int?>("ClienteId")
                        .HasColumnType("integer")
                        .HasColumnName("cliente_id");

                    b.Property<DateOnly?>("DataConcessao")
                        .HasColumnType("date")
                        .HasColumnName("data_concessao");

                    b.Property<DateOnly?>("DataVencimento")
                        .HasColumnType("date")
                        .HasColumnName("data_vencimento");

                    b.Property<decimal?>("TaxaJuros")
                        .HasPrecision(5, 2)
                        .HasColumnType("numeric(5,2)")
                        .HasColumnName("taxa_juros");

                    b.Property<decimal?>("Valor")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("valor");

                    b.HasKey("EmprestimoId")
                        .HasName("emprestimos_pkey");

                    b.HasIndex("ClienteId");

                    b.ToTable("emprestimos", (string)null);
                });

            modelBuilder.Entity("FinanceNow.Entities.HistoricoDeCredito", b =>
                {
                    b.Property<int>("HistoricoId")
                        .HasColumnType("integer")
                        .HasColumnName("historico_id");

                    b.Property<int?>("ClienteId")
                        .HasColumnType("integer")
                        .HasColumnName("cliente_id");

                    b.Property<DateOnly?>("Data")
                        .HasColumnType("date")
                        .HasColumnName("data");

                    b.Property<string>("Descricao")
                        .HasColumnType("text")
                        .HasColumnName("descricao");

                    b.HasKey("HistoricoId")
                        .HasName("historico_de_credito_pkey");

                    b.HasIndex("ClienteId");

                    b.ToTable("historico_de_credito", (string)null);
                });

            modelBuilder.Entity("FinanceNow.Entities.Pagamento", b =>
                {
                    b.Property<int>("PagamentoId")
                        .HasColumnType("integer")
                        .HasColumnName("pagamento_id");

                    b.Property<DateOnly?>("DataPagamento")
                        .HasColumnType("date")
                        .HasColumnName("data_pagamento");

                    b.Property<int?>("EmprestimoId")
                        .HasColumnType("integer")
                        .HasColumnName("emprestimo_id");

                    b.Property<decimal?>("Valor")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("valor");

                    b.HasKey("PagamentoId")
                        .HasName("pagamentos_pkey");

                    b.HasIndex("EmprestimoId");

                    b.ToTable("pagamentos", (string)null);
                });

            modelBuilder.Entity("FinanceNow.Entities.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UsuarioId"));

                    b.Property<string>("CPF")
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)");

                    b.Property<string>("Celular")
                        .HasColumnType("text");

                    b.Property<DateOnly?>("DataNascimento")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.HasKey("UsuarioId");

                    b.HasIndex("CPF")
                        .IsUnique();

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("FinanceNow.Entities.CartoesDeCredito", b =>
                {
                    b.HasOne("FinanceNow.Entities.Cliente", "Cliente")
                        .WithMany("CartoesDeCreditos")
                        .HasForeignKey("ClienteId")
                        .HasConstraintName("cartoes_de_credito_cliente_id_fkey");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("FinanceNow.Entities.Conta", b =>
                {
                    b.HasOne("FinanceNow.Entities.Cliente", "Cliente")
                        .WithMany("Conta")
                        .HasForeignKey("ClienteId")
                        .HasConstraintName("contas_cliente_id_fkey");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("FinanceNow.Entities.Emprestimo", b =>
                {
                    b.HasOne("FinanceNow.Entities.Cliente", "Cliente")
                        .WithMany("Emprestimos")
                        .HasForeignKey("ClienteId")
                        .HasConstraintName("emprestimos_cliente_id_fkey");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("FinanceNow.Entities.HistoricoDeCredito", b =>
                {
                    b.HasOne("FinanceNow.Entities.Cliente", "Cliente")
                        .WithMany("HistoricoDeCreditos")
                        .HasForeignKey("ClienteId")
                        .HasConstraintName("historico_de_credito_cliente_id_fkey");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("FinanceNow.Entities.Pagamento", b =>
                {
                    b.HasOne("FinanceNow.Entities.Emprestimo", "Emprestimo")
                        .WithMany("Pagamentos")
                        .HasForeignKey("EmprestimoId")
                        .HasConstraintName("pagamentos_emprestimo_id_fkey");

                    b.Navigation("Emprestimo");
                });

            modelBuilder.Entity("FinanceNow.Entities.Cliente", b =>
                {
                    b.Navigation("CartoesDeCreditos");

                    b.Navigation("Conta");

                    b.Navigation("Emprestimos");

                    b.Navigation("HistoricoDeCreditos");
                });

            modelBuilder.Entity("FinanceNow.Entities.Emprestimo", b =>
                {
                    b.Navigation("Pagamentos");
                });
#pragma warning restore 612, 618
        }
    }
}
